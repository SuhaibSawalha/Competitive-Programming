long long minimum_swaps (string s, string w) {
  int n = s.size();
  vector<int> p[26];
  for (int i = n - 1; ~i; --i) {
    p[s[i] - 'a'].push_back(i);
  }
  oset<int> os;
  long long ans = 0;
  for (int i = 0; i < n; ++i) {
    int c = w[i] - 'a';
    if (p[c].empty()) {
      return -1;
    }
    ans += p[c].back() - os.order_of_key(p[c].back());
    os.insert(p[c].back());
    p[c].pop_back();
  }
  return ans;
}
