const long double I = -1e18;
array<long double, 3> findCircle(int x1, int y1, int x2, int y2, int x3, int y3) {
  long double x12 = x1 - x2;
  long double x13 = x1 - x3;

  long double y12 = y1 - y2;
  long double y13 = y1 - y3;

  long double y31 = y3 - y1;
  long double y21 = y2 - y1;

  long double x31 = x3 - x1;
  long double x21 = x2 - x1;

  long double sx13 = pow(x1, 2) - pow(x3, 2);
  long double sy13 = pow(y1, 2) - pow(y3, 2);

  long double sx21 = pow(x2, 2) - pow(x1, 2);
  long double sy21 = pow(y2, 2) - pow(y1, 2);
  if (((y31) * (x12) - (y21) * (x13)) == 0 || ((x31) * (y12) - (x21) * (y13)) == 0) {
    return {I, I, I};
  }

  long double f = ((sx13) * (x12)
           + (sy13) * (x12)
           + (sx21) * (x13)
           + (sy21) * (x13))
          / (2 * ((y31) * (x12) - (y21) * (x13)));
  long double g = ((sx13) * (y12)
           + (sy13) * (y12)
           + (sx21) * (y13)
           + (sy21) * (y13))
          / (2 * ((x31) * (y12) - (x21) * (y13)));

  long double c = -pow(x1, 2) - pow(y1, 2) - 2 * g * x1 - 2 * f * y1;

  long double h = -g;
  long double k = -f;
  long double sqr_of_r = h * h + k * k - c;

  long double r = sqrt(sqr_of_r);
  return {h, k, r};
}
