vector <int> toposort (vector<vector<int>> &adj) {
  int n = adj.size();
  vector<int> degree(n, 0);
  for (int u = 0; u < n; ++u) {
    for (int& v : adj[u]) {
      degree[v]++;
    }
  }
  queue <int> q;
  for (int i = 0; i < n; ++i) {
    if (!degree[i]) {
      q.push(i);
    }
  }
  vector <int> ans;
  while (!q.empty()) {
    int sz = q.size();
    while (sz--) {
      int u = q.front();
      q.pop();
      for (int v : adj[u]) {
        if (!--degree[v]) {
          q.push(v);
        }
      }
      ans.push_back(u);
    }
  }
  if (ans.size() < n) {
    return {};
  }
  return ans;
}
